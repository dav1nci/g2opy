FROM ubuntu:16.04

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils apt-transport-https software-properties-common

RUN apt-get install -y \
        cmake \
        git \
	libpng-dev \
        libzmq3-dev \
        zip \
        zlib1g-dev \
        wget \
        curl \
        unzip \
        rsync

RUN apt-get install -y build-essential


RUN add-apt-repository ppa:jonathonf/python-3.6
RUN apt-get update
RUN apt-get install -y python3.6 python3.6-dev 

RUN wget https://bootstrap.pypa.io/get-pip.py
RUN python3.6 get-pip.py
RUN ln -s /usr/bin/python3.6 /usr/local/bin/python
RUN python --version
RUN pip --version
#RUN ln -s /usr/local/bin/pip /usr/local/bin/pip

RUN pip install pip --upgrade
RUN pip install Cython numpy scipy

RUN apt-get update && \
    apt-get install -y \
    ffmpeg qtbase5-dev libatlas-base-dev libsnappy-dev \
    pkg-config gfortran libpng-dev \
    libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev \
    libjpeg-dev libtiff5-dev libjasper-dev \
    libavcodec-dev libavformat-dev libswscale-dev \
    libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev \
    libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev \
    libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev \
    libvorbis-dev libxvidcore-dev v4l-utils \
    liblapack-dev liblapacke-dev libopenblas-dev checkinstall \
    libgdal-dev libboost-all-dev libgflags-dev \
    libgoogle-glog-dev libhdf5-serial-dev libprotobuf-dev \
    protobuf-compiler libleveldb-dev liblmdb-dev libftdi-dev



RUN python --version
RUN pip --version

RUN pip install opencv-python
RUN pip install opencv-contrib-python

#RUN cd /tmp && wget https://github.com/opencv/opencv/archive/3.4.2.zip -O opencv3.zip && \
#    unzip -q opencv3.zip && \
#    wget https://github.com/opencv/opencv_contrib/archive/3.4.2.zip -O opencv_contrib3.zip && \
#    unzip -q opencv_contrib3.zip
#
#RUN apt-get update && apt-get install -y --no-install-recommends libopenblas-dev
#
#RUN add-apt-repository ppa:jonathonf/gcc-7.1 -y && apt-get update && apt-get install -y --no-install-recommends gcc-7 g++-7
#
#
#RUN mkdir /tmp/opencv-3.4.2/build && \
#    cd /tmp/opencv-3.4.2/build && \
#    CC=gcc-7 CXX=g++-7 cmake -D CMAKE_BUILD_TYPE=RELEASE \
#    -D BUILD_PYTHON_SUPPORT=ON \
#    -D CMAKE_INSTALL_PREFIX=/usr/local \
#    -D FORCE_VTK=ON  \
#    -D WITH_TBB=ON \
#    -D WITH_V4L=ON \
#    -D WITH_QT=ON \
#    -D WITH_V4L=ON \
#    -D WITH_OPENGL=ON \
#    -D WITH_CUBLAS=ON \
#    -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES --expt-relaxed-constexpr" \
#    -D WITH_GDAL=ON \
#    -D WITH_XINE=ON \
#    -D ENABLE_CXX11=ON \
#    -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.4.2/modules \
#    -D BUILD_EXAMPLES=OFF .. && \
#    make -j`nproc` && \
#    make install && \
#    ldconfig && \
#    cd ~ && rm -rf /tmp/opencv-3.4.2 && rm -rf /tmp/opencv_contrib-3.4.2 && \
#    rm -rf /tmp/opencv3.zip && rm -rf /tmp/opencv_contrib3.zip

RUN apt-get install -y vim

RUN apt-get install -y libeigen3-dev

RUN cd /opt && git clone https://github.com/uoip/g2opy.git 

RUN apt-get install -y libsuitesparse-dev

RUN cd /opt/g2opy/ && mkdir build
RUN cd /opt/g2opy/build && cmake .. && make -j`nproc` && cd .. && python setup.py install
#RUN mkdir /opt/g2opy/ && rm -rf g2o && git clone https://github.com/RainerKuemmerle/g2o.git && cd g2o && git checkout 17fce87df9d5b2aa7b4239be1fbac9d40c95d72f && mkdir build && cd build && make -j`nproc` && make install
#RUN cd /opt/g2opy && mkdir build && cd build && cmake .. && make -j`nproc`

RUN cd /opt/g2opy/ && python setup.py install

WORKDIR /
